/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/shm.glb --types --output app/head.tsx 
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'


type GLTFResult = GLTF & {
  nodes: {
    female_hair: THREE.Mesh
    male_head: THREE.Mesh
    male_hair: THREE.Mesh
    beard: THREE.Mesh
    female_head: THREE.Mesh
  }
  materials: {}
  animations: any
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/shm.glb') as GLTFResult
  return (
    <group {...props} dispose={null} >
      <mesh geometry={nodes.female_hair.geometry} material={nodes.female_hair.material} />
      <mesh geometry={nodes.male_head.geometry} material={nodes.male_head.material} />
      <mesh geometry={nodes.male_hair.geometry} material={nodes.male_hair.material} />
      <mesh geometry={nodes.beard.geometry} material={nodes.beard.material} />
      <mesh geometry={nodes.female_head.geometry} material={nodes.female_head.material} />
    </group>
  )
}

useGLTF.preload('/shm.glb')
